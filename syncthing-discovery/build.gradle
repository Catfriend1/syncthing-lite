apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
mainClassName = 'net.syncthing.java.discovery.Main'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

dependencies {
    implementation project(':syncthing-core')
    implementation "commons-cli:commons-cli:1.4"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.google.protobuf:protobuf-javalite:$protobuf_lite_version"D
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
}

run {
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_lite_version"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

// Workaround for https://github.com/google/protobuf-gradle-plugin/issues/100
compileKotlin.dependsOn('generateProto')

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
            "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-opt-in=kotlin.RequiresOptIn"
        ]
    }
}
